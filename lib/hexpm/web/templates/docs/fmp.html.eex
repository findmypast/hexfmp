<h2>
  Hexfmp Usage
</h2>
<h3>Registration</h3>
<p>
  Create an account <a href="<%= signup_path(Endpoint, :show) %>">here</a>.</br>
  It is recommended each team member have an individual account, and then a team account be created (specify the team slack channel as the slack target). Users can then be added to the team through the account dashboard, under slack settings.</br>
  This will allow packages to be published under teams rather than users, which is preferable as users come and go.<br>
  Account verification messages and forgotten password links will be sent to the slack user / channel provided.
</p>
<h3>Installation</h3>
<p>
  Add the hexfmp private repo to your list of hex repos by running</br> <code>mix hex.repo add hexfmp http://production.hexfmp.service.consul:3333/repo</code></br>
  After configured, you can specify the repo of each dependency in your <code>mix.exs deps</code> function, e.g.
  <pre>
    <code class="elixir">
defp deps do
  [
    {:phoenix, "~> 1.3-rc"},
    {:phoenix_ecto, "~> 3.1-rc"},
    {:some_fmp_package, ">= 0.0.0", repo: :hexfmp},
    {:ex_doc, ">= 0.0.0", only: :dev}
  ]
end
    </code>
  </pre>
  Now <code>mix deps.get</code> should work as usual, pulling each dependency from the corresponding repo.</br></br>

  Whilst <code>mix</code> does support multiple repos, it does not <i>yet</i> support multiple APIs.</br>
  This means when interacting with the private hex repo for publishing / user configuration,</br>
  you must prepend all commands with <code>HEX_API_URL=http://production.hexfmp.service.consul:3333/api</code>,</br>
  e.g</br>
  <code>HEX_API_URL=http://production.hexfmp.service.consul:3333/api mix hex.publish</code></br></br>

  This can be tedious and easily forgotten, so for simplicity you can put the following two functions in your <code>~/.zshrc</code> file.
  <pre>
    <code class="javascript">
function hexfmp_publish() {
  HEX_API_URL=http://production.hexfmp.service.consul:3333/api mix hex.publish;
}
function hexfmp_auth() {
  HEX_API_URL=http://production.hexfmp.service.consul:3333/api mix hex.user auth;
}
    </code>
  </pre>
  Then either open a new terminal or run <code>source ~/.zshrc</code>. After which you should be able to run <code>hexfmp_auth</code> (it will prompt for user/pass) to authenticate, and <code>hexfmp_publish</code> (from your package root dir) to publish.</br></br>
  For more information on publishing packages to the internal repo, go to the <a href="<%= docs_path(Endpoint, :publish) %>">Publishing packages</a> docs.
</p>
